import numpy as np

 

def pagerank(adjacency_matrix, d=0.85, num_iterations=100):

    # Get the number of nodes

    num_nodes = adjacency_matrix.shape[0]

 

    # Initialize the PageRank values for each node

    pagerank_values = np.ones(num_nodes) / num_nodes

    print(pagerank_values)

    for _ in range(num_iterations):

        new_pagerank = np.zeros(num_nodes)

        for i in range(num_nodes):

            for j in range(num_nodes):

                if adjacency_matrix[j, i] == 1:

                    num_outlinks = np.sum(adjacency_matrix[j])

                    new_pagerank[i] += (1 / num_outlinks) * pagerank_values[j]

        pagerank_values = (1 - d) / num_nodes + d * new_pagerank

 

    return pagerank_values

 

# Example usage

if __name__ == "__main__":

    # Define an example adjacency matrix (0 for no link, 1 for a link)

    adjacency_matrix = np.array([

        [0, 1, 1, 0],

        [0, 0, 1, 1],

        [1, 0, 0, 0],

        [0, 0, 1, 0]

    ])

 

    # Calculate PageRank

    pagerank_values = pagerank(adjacency_matrix)

    print("PageRank values:", pagerank_values)

 

Sent from Mail for Windows
